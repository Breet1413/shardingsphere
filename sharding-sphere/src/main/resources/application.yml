spring:
  application:
    name: sharing-sphere-server
  main:
    allow-bean-definition-overriding: true #设置为true，表示后发现的bean会覆盖之前相同名称的bean。
server:
  port: 9961

sharding:
  jdbc:
    datasource:
      names: ds0,ds1
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/ds0?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: gaozy
      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/ds1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: gaozy
    # 水平拆分的数据库（表） 配置分库 + 分表策略 行表达式分片策略
    # 分库策略
    config:
      sharding:
        default-database-strategy:
          inline:
            sharding-column: id
            algorithm-expression: ds$->{id %2}
        # 分表策略 其中user为逻辑表 分表主要取决于age字段
        tables:
          user:
            actual-data-nodes: ds$->{0..1}.user_$->{0..1}
            table-strategy:
              inline:
                sharding-column: age
                algorithm-expression: user_$->{age %2} # 分片算法表达式
            key-generator-column-name: id
      #打印执行的数据库以及语句
      props:
        sql:
          show: true
#mybatis-plus映射mapper文件
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.example.shardingSphere.entity